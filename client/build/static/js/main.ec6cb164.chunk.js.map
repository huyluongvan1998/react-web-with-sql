{"version":3,"sources":["action/type.js","action/alert.js","utils/setAuthToken.js","action/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Spinner.js","components/dashboard/DashboardAction.js","action/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/createProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileAbout.js","components/profile/ProfileExp.js","components/profile/ProfileEdu.js","components/profile/ProfileGitHub.js","components/profile/ProfileTop.js","components/profile/Profile.js","components/posts/PostItem.js","action/post.js","components/posts/Posts.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/rootReducer.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOG_OUT","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_FAIL","ADD_EDUCATION_SUCCESS","DELETE_EXP","DELETE_EDU","ACCOUNT_DELETED","GET_PROFILES","GET_PROFILE_BY_ID","GET_GITHUB_REPOS","GET_POSTS","POST_ERROR","UPDATE_LIKE","DELETE_POST","ADD_POST","TEST_ROUTE","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","guestLink","to","authLink","className","onClick","register","name","email","password","config","body","JSON","stringify","post","response","errors","map","error","useState","password2","formData","setFormData","onChange","event","target","value","onSubmit","e","preventDefault","placeholder","login","loginData","setLoginForm","Spinner","DashboardAction","getCurrentProfile","statusText","status","createProfile","history","edit","push","forEach","deleteExp","expId","delete","experiences","exp","company","title","format","from","current","_id","deleteEdu","eduId","educations","edu","school","degree","profile","accountDeleted","window","confirm","user","useEffect","experience","education","Component","component","rest","render","props","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialLink","ToggleSocialLink","onChangeHandle","submitHandler","join","social","addExperience","expData","put","description","userExperience","setUserExperience","toDateDisable","toggleDateDisable","onChangeHandler","onSubmitHandler","disabled","cols","rows","addEducation","fieldofstudy","toggleToDate","checked","ProfileItem","avatar","src","alt","slice","skill","index","getProfiles","profiles","length","ProfileAbout","info","idx","ProfileExp","ProfileEdu","repos","getGitHubRepos","username","repo","href","html_url","rel","stargazers_count","watchers_count","forks_count","ProfileTop","getProfileById","profileId","match","params","addLikes","likes","removeLikes","deletePost","text","comments","date","getPosts","addPost","posts","setText","alerts","alert","INITIAL_STATE","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec6cb164.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'RESGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADEDED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR-PROFILE';\r\nexport const ADD_EXPERIENCE_SUCCESS = 'ADD_EXPERIENCE_SUCCESS';\r\nexport const ADD_EXPERIENCE_FAIL = 'ADD_EXPERIENCE_FAIL';\r\nexport const ADD_EDUCATION_SUCCESS = 'ADD_EDUCATION_SUCCESS';\r\nexport const DELETE_EXP = 'DELETE_EXP';\r\nexport const DELETE_EDU = 'DELETE_EDU';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_PROFILE_BY_ID = 'GET_PROFILE_BY_ID';\r\nexport const GET_GITHUB_REPOS = 'GET_GITHUB_REPOS';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKE = 'UPDATE_LIKE';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST'\r\n\r\n\r\n\r\n\r\n//my Route\r\nexport const TEST_ROUTE = 'TEST_ROUTE';\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {SET_ALERT, REMOVE_ALERT} from './type';\r\n\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuidv4();\r\n\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    })\r\n\r\nsetTimeout(()=> dispatch({\r\n    type: REMOVE_ALERT,\r\n    payload: id\r\n}), timeout);\r\n}","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // if there's a token then set headers with x-auth-token\r\n        axios.defaults.headers.common['x-auth-token']= token;\r\n\r\n    } else {\r\n        //if not then delete the headers\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\n\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    REMOVE_ALERT,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOG_OUT,\r\n    CLEAR_PROFILE\r\n} from './type';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n\r\n    if(localStorage.token) {\r\n        //set headers for the GET route === config variable.\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({ \r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n}\r\n\r\n//REGISTER USER\r\nexport const register =  ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({name, email, password});\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        //Take error data from backend\r\n        const errors = error.response.data.errors;\r\n        // error return JSON object msg for showing \r\n        errors.map(error => dispatch(setAlert(error.msg, \"danger\")));\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//Login\r\n\r\nexport const login = ({ email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\" : 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password});\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser());\r\n        \r\n    } catch (error) {\r\n\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n        errors.map(error => dispatch(setAlert(error.msg, 'danger'))); //print out the error\r\n        //REMOVE ERROR\r\n        dispatch({\r\n            type: REMOVE_ALERT\r\n        })\r\n    }\r\n}\r\n\r\n//LOG OUT\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    dispatch({\r\n        type: LOG_OUT\r\n    })\r\n    \r\n}","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { logout } from '../../action/auth';\r\n\r\n\r\n\r\nconst Navbar = ({ auth: {isAuthenticated, loading}, logout }) => {\r\n\r\nconst guestLink = (\r\n    <ul>\r\n        <li><Link to=\"/profiles\">Developers</Link></li>\r\n        <li><Link to=\"/register\">Register</Link></li>\r\n        <li><Link to=\"/login\">Login</Link></li>\r\n    </ul>\r\n  )\r\nconst authLink = (\r\n    <ul>\r\n          <li>\r\n            <Link to=\"/profiles\">\r\n              Developers\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/posts\">\r\n              Posts\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/dashboard\">\r\n              <i className=\"fas fa-user\" />{' '}\r\n              <span className='hide-sm'>Dashboard</span>\r\n            </Link></li>\r\n          <li>\r\n            <Link to=\"#!\" onClick={logout}>\r\n              <i className=\"fas fa-sign-out-alt\" />{' '}\r\n              <span className='hide-sm'>Log Out</span> {/*span for just showing the icon on mobile devices */}\r\n            </Link>\r\n          </li>\r\n    </ul>\r\n)\r\n\r\n\r\n    return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\"><i className=\"fas fa-code\"></i> MySite</Link>\r\n      </h1>\r\n      {\r\n        !loading && (\r\n          <Fragment>\r\n            { isAuthenticated ? authLink : guestLink }\r\n          </Fragment>\r\n        )\r\n      }\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n\r\n      return <Redirect to=\"/dashboard\" />; // When log in cant get to welcome page\r\n    }\r\n  \r\n\r\n    return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">MySite</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../action/alert';\r\nimport { register } from '../../action/auth'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, email, password, password2} = formData; \r\n\r\n    const onChange = (event) => setFormData({ ...formData, [event.target.name] : event.target.value})\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        if(password !== password2){\r\n            setAlert('password do not match', 'danger');\r\n        } else {\r\n            // const newUser = {\r\n            //     name,\r\n            //     email,\r\n            //     password\r\n            // };\r\n            // try {\r\n            //     // configure the header to pass on the Backend route\r\n            //     const config = {\r\n            //         headers: {\r\n            //             \"Content-Type\" : \"application/json\"\r\n            //         }\r\n            //     };\r\n    \r\n            //     const body = JSON.stringify(newUser); // turn newuser from object to into a JSON\r\n            //     // pattern for sending requiest to backend using axios\r\n            //     const res = await axios.post('/api/users', body, config); \r\n            //     console.log(res.data)// send back token\r\n            // } catch (error) {\r\n            //     console.error(error.response.data) // console error in react\r\n            // }\r\n            \r\n            //Register with redux\r\n            register({ name, email, password });\r\n        }  \r\n    }\r\n\r\n    if(isAuthenticated) {\r\n        return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n        <section className=\"container\">\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    onChange={e => onChange(e)}\r\n                    value={name}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"email\"\r\n                    onChange={e => onChange(e)}\r\n                    value={email} />\r\n                <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                    Gravatar email</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={e => onChange(e)}\r\n                    value={password}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    onChange={e => onChange(e)}\r\n                    value={password2}\r\n                />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n        </section>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\n\r\n//check required setAlert must be a function\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired, \r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n//By import action to component through Connect => allowed access to props.setAlert\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, {Fragment, useState} from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../action/auth';\r\n\r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n    const [loginData, setLoginForm]= useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = loginData;\r\n\r\n    const onChange = event => setLoginForm({...loginData, \r\n        [event.target.name] : event.target.value\r\n    });\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        login({email, password});\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        \r\n        return <Redirect to='/dashboard' />\r\n     }\r\n     \r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large text-primary\">Sign In</h1>\r\n                <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into Your Account</p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                    />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n                </form>\r\n                <p className=\"my-1\">\r\n                    Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n                </p>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated //take all data of auth from redux\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react'\r\n\r\nexport const Spinner = () => (\r\n        <div className='loader'>\r\n        </div>\r\n    )\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardAction = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"dash-buttons\">\r\n                <Link to=\"/edit-profile\" className=\"btn btn-light\"\r\n                ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\r\n                <Link to=\"/add-experience\" className=\"btn btn-light\"\r\n                ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\r\n                <Link to=\"/add-education\" className=\"btn btn-light\"\r\n                ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardAction\r\n","import axios from 'axios';\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    ADD_EXPERIENCE_SUCCESS,\r\n    ADD_EXPERIENCE_FAIL,\r\n    ADD_EDUCATION_SUCCESS,\r\n    DELETE_EXP,\r\n    DELETE_EDU,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    CLEAR_PROFILE,\r\n    GET_GITHUB_REPOS,\r\n    GET_PROFILE_BY_ID,\r\n}\r\nfrom  '../action/type';\r\nimport { setAlert } from './alert';\r\n\r\n//get current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res =await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: CLEAR_PROFILE\r\n        });\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//get all user profile\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n\r\n    try {\r\n        const res =await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//get user profile BY ID\r\nexport const getProfileById = (profileId) => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n\r\n    try {\r\n        const res =await axios.get(`/api/profile/user/${profileId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE_BY_ID,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//get user Github Repos BY ID\r\nexport const getGitHubRepos = (username) => async dispatch => {\r\n    \r\n\r\n    try {\r\n        const res =await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_GITHUB_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//*  ADD Profile *//\r\nexport const createProfile = (formData, history, edit) => async dispatch => {\r\ntry {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n        type: GET_PROFILE ,\r\n        payload: res.data\r\n    }); \r\n    dispatch(setAlert(edit? 'Profile Updated' : 'Profile Created', 'success' ));\r\n    \r\n    // redirect action => alert will be displayed at the destination site.\r\n    if(!edit) {\r\n        history.push('/dashboard');\r\n    }\r\n} catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if(errors){\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))); //print out the error\r\n    }\r\n    \r\n    dispatch({\r\n        type:PROFILE_ERROR,\r\n        payload: {msg: error.response.statusText, status: error.response.status}\r\n    });\r\n}\r\n    \r\n}\r\n// please learn by heart for meh. Do not destructoring in function variable !!! PLEASEEEEEEEEEEEEEEEEEEEE\r\n// GODDDDDD THIS IS STRESSSSING ME OUTTTTTTTTTTT AHHHHHHHHHHHHHHHHHHHHHH!!!!!!!!!!!!!\r\nexport const addExperience = (expData, history) => async dispatch =>  { \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        };\r\n\r\n        const res = await axios.put('/api/profile/experience', expData, config);\r\n        \r\n        dispatch({\r\n            type: ADD_EXPERIENCE_SUCCESS,\r\n            payload: res.data\r\n        });\r\n            dispatch(setAlert('Add EXP success', 'success'));\r\n            history.push('/dashboard');\r\n\r\n\r\n    } catch (error) {\r\n       const errors= error.response.data.errors;\r\n        if(errors){\r\n            errors.map(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        dispatch({\r\n            type: ADD_EXPERIENCE_FAIL,\r\n            payload: {msg: error.response.statusText, status: error.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//*  ADD EDUCATION *//\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        };\r\n\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: ADD_EDUCATION_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Add education success', 'success'));\r\n        history.push('/dashboard');\r\n\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        });\r\n    }\r\n}\r\n\r\n// DELETE EXPERIENCE\r\nexport const deleteExp = (expId) => async dispatch => {\r\n    \r\n    \r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/:${expId}`);\r\n\r\n    dispatch({\r\n        type: DELETE_EXP,\r\n        payload: res.data\r\n    })\r\n    dispatch(setAlert('Delete Experience Successfully', 'success'));\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        });\r\n    }\r\n    \r\n}\r\n// DELETE Education\r\nexport const deleteEdu = (eduId) => async dispatch => {\r\n    \r\n    \r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/:${eduId}`);\r\n\r\n    dispatch({\r\n        type: DELETE_EDU,\r\n        payload: res.data\r\n    })\r\n    dispatch(setAlert('Delete Education Successfully', 'success'));\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        });\r\n    }\r\n    \r\n}\r\n\r\n// DELETE Account\r\nexport const accountDeleted = () => async dispatch => {\r\n    if(window.confirm('ARE YOU SURE WANT TO DELETE. THIS CAN BE UNDONE'))\r\n    try {\r\n        const res = await axios.delete(`/api/profile`);\r\n\r\n    dispatch({\r\n        type: ACCOUNT_DELETED,\r\n        payload: res.data\r\n    })\r\n    dispatch(setAlert('Delete Account Successfully', 'success'));\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        };\r\n        dispatch({\r\n            type: PROFILE_ERROR\r\n        });\r\n    }\r\n    \r\n}\r\n","import React, {Fragment} from 'react';\r\nimport Moment from 'react-moment';\r\nimport { deleteExp } from '../../action/profile';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Experience = ({ experiences, deleteExp}) => {\r\n\r\n    const data = experiences.map(exp => (\r\n                        <tr key={exp._id}>\r\n                            <td> \r\n                                {exp.company}\r\n                            </td>\r\n                            <td className='hide-sm'>\r\n                                {exp.title}\r\n                            </td>\r\n                            <td className='hide-sm'>\r\n                                <Moment format='YYYY/MM/DD'> \r\n                                  {exp.from}\r\n                                </Moment>\r\n                                {' '}- {\r\n                                    exp.current ? 'Now' \r\n                                    : \r\n                                        <Moment format='YYYY/MM/DD'>\r\n                                                {exp.to}\r\n                                        </Moment>\r\n                                    }\r\n                            </td>\r\n                            <td>\r\n                                <button className='btn btn-danger' onClick={() => \r\n                                deleteExp(exp._id)\r\n                            }> Delete </button>\r\n                            </td>\r\n                         </tr>\r\n                    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Year</th>\r\n                        <th>Delete</th>\r\n                    </tr>    \r\n                </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    deleteExp: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { deleteExp })(Experience);\r\n","import React, {Fragment} from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEdu } from '../../action/profile';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Education = ({ educations, deleteEdu }) => {\r\n\r\n    const data = educations.map(edu => (\r\n                        <tr key={edu._id}>\r\n                            <td> \r\n                                {edu.school}\r\n                            </td>\r\n                            <td className='hide-sm'>\r\n                                {edu.degree}\r\n                            </td>\r\n                            <td className='hide-sm'>\r\n                                <Moment format='YYYY/MM/DD'> \r\n                                  {edu.from}\r\n                                </Moment>\r\n                                {' '}- {\r\n                                    edu.current ? 'Now' \r\n                                    : \r\n                                        <Moment format='YYYY/MM/DD'>\r\n                                                {edu.to}\r\n                                        </Moment>\r\n                                    }\r\n                            </td>\r\n                            <td>\r\n                                <button className='btn btn-danger'\r\n                                    onClick={() => deleteEdu(edu._id)}\r\n                                > Delete </button>\r\n                            </td>\r\n                            \r\n                         </tr>\r\n                    ));\r\n              \r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Year</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nEducation.propTypes = {\r\n    deleteEdu: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { deleteEdu } )(Education);\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Spinner } from '../layout/Spinner';\r\nimport { Link} from 'react-router-dom';\r\nimport DashboardAction from './DashboardAction';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\n\r\n//actio\r\nimport { getCurrentProfile, accountDeleted } from '../../action/profile';\r\n//action\r\n\r\nconst Dashboard =  ({ \r\n    getCurrentProfile,\r\n    accountDeleted,\r\n    auth: { user }, \r\n    profile: { profile, loading }}) => {\r\n\r\n    useEffect(() => {\r\n         getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (<Spinner />\r\n        ) : (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Dashboard</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i>\r\n                Welcome {user && user.name} \r\n            </p>\r\n        {\r\n            profile !== null ?(\r\n            <Fragment>\r\n                <DashboardAction />\r\n                <Experience experiences={profile.experience} />\r\n                <Education educations={profile.education} />\r\n                <button\r\n                    className='btn btn-danger my-2'\r\n                    onClick={() => accountDeleted()}\r\n                >Delete Account</button>\r\n            </Fragment> \r\n            ) : (      \r\n            <Fragment>\r\n                <p>you have not yet setup a profile, please add some info</p>\r\n                <Link to='/create-profile' className='btn btn-primary my-1' >\r\n                    Create Profile\r\n                </Link>\r\n                <button\r\n                    className='btn btn-danger my-2'\r\n                    onClick={() => accountDeleted()}\r\n                >Delete Account</button>\r\n            </Fragment> )\r\n        }\r\n\r\n    </Fragment>)\r\n}\r\n\r\n\r\n\r\nDashboard.propTypes = {\r\ngetCurrentProfile : PropTypes.func.isRequired,\r\naccountDeleted: PropTypes.func.isRequired,\r\nauth: PropTypes.object.isRequired,\r\nprofile: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile \r\n})\r\n\r\nexport default connect(mapStateToProps, { \r\n    getCurrentProfile, \r\n    accountDeleted \r\n})(Dashboard);\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { Spinner } from '../layout/Spinner';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: {\r\n        isAuthenticated,\r\n        loading\r\n    },\r\n    ...rest\r\n}) => (\r\n    <Route \r\n    {...rest} \r\n    render= { props =>\r\n        loading ? <Spinner /> :\r\n        !isAuthenticated && !loading ? (\r\n            <Redirect to='login' /> \r\n            ) : (\r\n            <Component {...props} />\r\n            )\r\n    }\r\n    />   \r\n    )\r\n\r\n\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps =  state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useState, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Link} from 'react-router-dom';\r\n\r\n//action \r\nimport { createProfile } from '../../action/profile';\r\n//action\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [ formData, setFormData ] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills:'' ,\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [ displaySocialLink, ToggleSocialLink ] = useState(false); \r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills ,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChangeHandle = e => {\r\n      setFormData({...formData, [e.target.name] : e.target.value });\r\n    }\r\n\r\n    const submitHandler = e => {\r\n      e.preventDefault();\r\n\r\n      createProfile(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => submitHandler(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChangeHandle(e)}>\r\n            <option value=\"0\" >* Select Professional Status</option>\r\n            <option value=\"Developer\" >Developer</option>\r\n            <option value=\"Junior Developer\" >Junior Developer</option>\r\n            <option value=\"Senior Developer\" >Senior Developer</option>\r\n            <option value=\"Manager\" >Manager</option>\r\n            <option value=\"Student or Learning\" >Student or Learning</option>\r\n            <option value=\"Instructor\" >Instructor or Teacher</option>\r\n            <option value=\"Intern\" >Intern</option>\r\n            <option value=\"Other\" >Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={company} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={website}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={location}\r\n          />\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={skills}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            onChange={e => onChangeHandle(e)}\r\n            value ={githubusername}\r\n            \r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"\r\n          onChange={e => onChangeHandle(e)}\r\n          value ={bio}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => ToggleSocialLink(!displaySocialLink)}>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {\r\n          displaySocialLink && \r\n          <Fragment>\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={twitter} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={facebook} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={youtube} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={linkedin} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={instagram} />\r\n              </div>\r\n          </Fragment>\r\n        }\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// eslint-disable-next-line\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\n//action \r\nimport { createProfile, getCurrentProfile } from '../../action/profile';\r\n//action\r\nconst EditProfile = ({ createProfile,\r\nhistory,\r\ngetCurrentProfile,\r\nprofile: {\r\n    profile,\r\n    loading\r\n} }) => {\r\n    const [ formData, setFormData ] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills:'' ,\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [ displaySocialLink, ToggleSocialLink ] = useState(false); \r\n\r\n    useEffect(()=> {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(\",\"),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social.twitter ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social.facebook ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social.linkedin ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social.youtube ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social.instagram ? '' : profile.social.instagram\r\n        });\r\n    // eslint-disable-next-line\r\n    }, [loading, getCurrentProfile]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills ,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChangeHandle = e => {\r\n      setFormData({...formData, [e.target.name] : e.target.value });\r\n    }\r\n\r\n    const submitHandler = e => {\r\n      e.preventDefault();\r\n\r\n      createProfile(formData, history, true);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => submitHandler(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChangeHandle(e)}>\r\n            <option value=\"0\" >* Select Professional Status</option>\r\n            <option value=\"Developer\" >Developer</option>\r\n            <option value=\"Junior Developer\" >Junior Developer</option>\r\n            <option value=\"Senior Developer\" >Senior Developer</option>\r\n            <option value=\"Manager\" >Manager</option>\r\n            <option value=\"Student or Learning\" >Student or Learning</option>\r\n            <option value=\"Instructor\" >Instructor or Teacher</option>\r\n            <option value=\"Intern\" >Intern</option>\r\n            <option value=\"Other\" >Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={company} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={website}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={location}\r\n          />\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" \r\n          onChange={e => onChangeHandle(e)}\r\n          value ={skills}\r\n          />\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            onChange={e => onChangeHandle(e)}\r\n            value ={githubusername}\r\n            \r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"\r\n          onChange={e => onChangeHandle(e)}\r\n          value ={bio}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => ToggleSocialLink(!displaySocialLink)}>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {\r\n          displaySocialLink && \r\n          <Fragment>\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={twitter} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={facebook} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={youtube} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={linkedin} />\r\n              </div>\r\n\r\n              <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" \r\n                  onChange={e => onChangeHandle(e)}\r\n                  value={instagram} />\r\n              </div>\r\n          </Fragment>\r\n        }\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../action/profile';\r\n\r\nconst AddExperience = ({ addExperience, history })=> {\r\n    const [userExperience, setUserExperience] = useState({\r\n        title: '',\r\n        company: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const  {\r\n        title,\r\n        company,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description,  \r\n    } = userExperience;\r\n\r\n    const [ toDateDisable, toggleDateDisable ] = useState(false); \r\n\r\n    const onChangeHandler = e => {\r\n        setUserExperience({...userExperience, [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        addExperience(userExperience, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n            Add An Experience\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n                positions that you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmitHandler(e)}>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Job Title\" name=\"title\"\r\n                    value={title}\r\n                    onChange={e => onChangeHandler(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Company\" name=\"company\"\r\n                    value={company}\r\n                    onChange={e => onChangeHandler(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\"\r\n                    value={location}\r\n                    onChange={e => onChangeHandler(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\"\r\n                >\r\n                <h4>From Date</h4>\r\n                <input type=\"date\" name=\"from\"\r\n                    value={from}\r\n                    onChange={e => onChangeHandler(e)}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <p><input type=\"checkbox\" name=\"current\" \r\n                    value={current}\r\n                    onChange={e => {\r\n                        setUserExperience({ ...userExperience, current: !current });\r\n                        toggleDateDisable(!toDateDisable);\r\n                    }}\r\n                /> {' '}Current Job</p>\r\n                </div>\r\n                <div className=\"form-group\"\r\n                >\r\n                <h4>To Date</h4>\r\n                <input type=\"date\" name=\"to\"\r\n                    value={to}\r\n                    onChange={e => onChangeHandler(e)}\r\n                    disabled={ toDateDisable ? 'disable' : '' }\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea\r\n                    name=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Job Description\"\r\n                    value={description}\r\n                    onChange={e => onChangeHandler(e)}\r\n                ></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { addEducation } from '../../action/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData ] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisable, toggleToDate] = useState(false);\r\n\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData;\r\n\r\n    const onChangeHandler = e => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n      e.preventDefault();\r\n      addEducation(formData, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Add Your Education\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-graduation-cap\"></i> Add any school, bootcamp, etc that\r\n                you have attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmitHandler(e) }>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"* School or Bootcamp\"\r\n                    name=\"school\"\r\n                    onChange={e => onChangeHandler(e)}\r\n                    value={school}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"* Degree or Certificate\"\r\n                    name=\"degree\"\r\n                    onChange={e => onChangeHandler(e)}\r\n                    value={degree}\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Field Of Study\"\r\n                    name=\"fieldofstudy\"\r\n                    onChange={e => onChangeHandler(e)}\r\n                    value={fieldofstudy}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h4>From Date</h4>\r\n                <input \r\n                  type=\"date\" \r\n                  name=\"from\"\r\n                  onChange={e => onChangeHandler(e)}\r\n                  value={from} \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <p>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      // GODDDDD REMEMBER TO NOT DELETE THE TAG NAME PLEASEEEE\r\n                      // ABSOLUTE IDOTTTTTTTTTTTT 2 HOURS FOR THIS SH*******\r\n                      name='current' \r\n                      value={current}\r\n                      checked={current}\r\n                      onChange={(e) => {\r\n                        //USING HOOK => USE SPREAD OPERATOR PLEASEEEEEE\r\n                          setFormData({...formData, current: !current });\r\n                          toggleToDate(!toDateDisable);\r\n                        }}\r\n                    />{' '} \r\n                      Current School or Bootcamp\r\n                </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                  <input \r\n                    type=\"date\" \r\n                    name=\"to\"\r\n                    onChange={e => onChangeHandler(e)}\r\n                    value={to} \r\n                    disabled= { toDateDisable ? 'disabled' : '' }\r\n                />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea\r\n                    name=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Program Description\"\r\n                    onChange={e => onChangeHandler(e)}\r\n                    value={description}\r\n                ></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = ({\r\n    addEducation: PropTypes.func.isRequired,\r\n})\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileItem = ({profile: {\r\n    user: {_id, name, avatar},\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n}  }) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"error\" className=\"round-img\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status}{' '} {\r\n                company && <span>at {company} </span> \r\n                } \r\n                </p>\r\n                <p className=\"my1\">{location && location }</p>\r\n                <Link to={`/profile/${_id}` } \r\n                    className='btn btn-primary'\r\n                >View Profile </Link>\r\n            </div>\r\n            <ul>\r\n                {\r\n                    skills.slice(0, 4).map((skill, index) => (\r\n                        <li key={index} className=\"text-primary\">\r\n                            <i className=\"fas fa-check\" /> {skill}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../action/profile';\r\nimport { Spinner } from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getProfiles, profile: {loading, profiles} }) => {\r\n    useEffect(() => {\r\n        getProfiles()\r\n    }, [getProfiles])\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n            loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {\r\n                        profiles.length > 0 \r\n                        ? \r\n                        profiles.map(profile => (\r\n                            <Fragment key={profile._id}>\r\n                                <ProfileItem  profile={profile} />\r\n                            </Fragment>\r\n                        )) : (\r\n                            <h4>No Profiles</h4>\r\n                        )\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfiles } )(Profiles)\r\n","import React from 'react'\r\n\r\nconst ProfileAbout = ({\r\n    info,\r\n    skills\r\n}) => {\r\n    return (\r\n        <div className=\"profile-about bg-light p-2 my-2\">\r\n          <h2 className=\"text-primary\">{`About ${info}`}</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sed\r\n            doloremque nesciunt, repellendus nostrum deleniti recusandae nobis\r\n            neque modi perspiciatis similique?\r\n          </p>\r\n          <div className=\"line\"></div>\r\n          <h2 className=\"text-primary\">Skill Set</h2>\r\n          <div className=\"skills\">\r\n            {\r\n                skills.slice(0,4).map((skill, idx) => (\r\n                    <div className=\"p-1\" key={idx}>\r\n                        <i className=\"fa fa-check\"></i> {skill}\r\n                    </div>\r\n                ))\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExp = ({\r\n    experience: {\r\n        company,\r\n        current,\r\n        description,\r\n        from,\r\n        location, \r\n        title,\r\n        to\r\n    }\r\n}) => {\r\n    return (\r\n        <div>\r\n          <h2 className=\"text-primary\">Experience</h2>\r\n          <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format='YYYY-MM-DD' >{from}</Moment>{' '}\r\n                - {' '} {current ? 'Now' : (\r\n                    <Moment format='YYYY-MM-DD'>{to}</Moment>\r\n                ) } \r\n            </p>\r\n            <p><strong>Position: </strong>{title}</p>\r\n            <p>\r\n              <strong>Description: </strong>{description}.\r\n            </p>\r\n            <p>\r\n              <strong>Location: </strong>{location}.\r\n            </p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExp.propTypes = {\r\n    experience : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileExp\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEdu = ({education: {\r\n    current,\r\n    degree,\r\n    description,\r\n    fieldofstudy,\r\n    from,\r\n    school,\r\n    to,\r\n}}) => {\r\n    return (\r\n        <div>\r\n          <h2 className=\"text-primary\">Education</h2>\r\n            <div>\r\n                <h3>{school}</h3>\r\n                <p>{from}{' '}\r\n                -{' '} {current ? ('Now'\r\n                ) : (\r\n                <Moment format='YYYY-MM-DD'> {to} </Moment> ) } \r\n                </p>\r\n                <p><strong>Degree: </strong>{degree}</p>\r\n                <p><strong>Field Of Study: </strong>{fieldofstudy}</p>\r\n                <p>\r\n                <strong>Description: </strong>{description}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEdu.propTypes = ({\r\n    education : PropTypes.object.isRequired,\r\n})\r\n\r\nexport default ProfileEdu\r\n","import React, {useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getGitHubRepos } from '../../action/profile'; \r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from '../layout/Spinner';\r\n\r\nconst ProfileGitHub = ({ getGitHubRepos, username, repos }) => {\r\n    useEffect(() => {\r\n        getGitHubRepos(username);\r\n    },[getGitHubRepos, username])\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2>Github Repository</h2>\r\n            {repos === null ?( <Spinner /> \r\n            ) : (\r\n                repos.map((repo, idx) => (\r\n                    <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url}\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'>\r\n                                        { repo.name }\r\n                                    </a>\r\n                            </h4>\r\n                            <p> { repo.description } </p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-dark\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )  }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nProfileGitHub.propTypes = {\r\ngetGitHubRepos: PropTypes.func.isRequired,\r\nrepos: PropTypes.array.isRequired,\r\nusername: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGitHubRepos })(ProfileGitHub);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExp from './ProfileExp';\r\nimport ProfileEdu from './ProfileEdu';\r\nimport ProfileGithub from './ProfileGitHub';\r\n\r\nconst ProfileTop = ({profile: {\r\n    company,\r\n    location,\r\n    skills,\r\n    social,\r\n    status,\r\n    website,\r\n    user:{ name, avatar },\r\n    education,\r\n    experience,\r\n    githubusername\r\n}}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-top bg-primary p-2 \">\r\n                <img\r\n                    className=\"round-img my-1\"\r\n                    src={avatar}\r\n                    alt=\"\"\r\n                />\r\n                <h1 className=\"large\">{name}</h1>\r\n                <p className=\"lead\">{status} {company ? `at ${company}`  : ''}</p>\r\n                <p>{location}</p>\r\n\r\n\r\n                <div className=\"icons my-1\">\r\n                    {website && (\r\n                        <Link to={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fas fa-globe fa-2x\"></i>\r\n                        </Link>\r\n                    )}\r\n                    {/* twitter */}\r\n                    {\r\n                        social && social.twitter && (\r\n                    <Link to={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-twitter fa-2x\"></i>\r\n                    </Link>\r\n                        )\r\n                    }\r\n                    {/* facebook */}\r\n                    {\r\n                        social && social.facebook && (\r\n                    <Link to={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-facebook fa-2x\"></i>\r\n                    </Link>\r\n                        )\r\n                    }\r\n\r\n                    {/* linkedin */}\r\n                    {\r\n                        social && social.facebook && (\r\n                    <Link to=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                    </Link>\r\n                        )\r\n                    }\r\n\r\n                    {/* youtube */}\r\n                    {\r\n                        social && social.youtube && (\r\n                    <Link to={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-youtube fa-2x\"></i>\r\n                    </Link>\r\n                    )\r\n                    }\r\n                    {/* instagram */}\r\n                    {\r\n                        social && social.instagram && (\r\n                    <Link to={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    </Link>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <ProfileAbout skills={skills} info={name} />\r\n            <div className=\"profile-grid my-2\">\r\n                <div className=\"profile-exp bg-white p-2\">\r\n                    <Fragment>\r\n                        {\r\n                            experience.length > 0 && experience.map((exp, idx) => (\r\n                                <ProfileExp key={idx} experience={exp} />\r\n                        ) )\r\n                        }\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"profile-edu bg-white p-2\">\r\n                    <Fragment>\r\n                        {\r\n                            education.length > 0 && education.map((edu, idx) => (\r\n                                <ProfileEdu key={idx} education={edu} />\r\n                        ) )\r\n                        }\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n            {githubusername && \r\n           <ProfileGithub username={githubusername} />}\r\n           </Fragment>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProfileById } from '../../action/profile';\r\nimport { Spinner } from '../layout/Spinner';\r\n\r\n// Profile Top\r\nimport ProfileTop from './ProfileTop';\r\n// Profile Top\r\n\r\nconst Profile = ({ getProfileById, \r\n    profile: {profile, loading}, \r\n    auth,\r\n    match\r\n }) => {\r\n\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                loading || profile === null ? (<Spinner />\r\n                ) : (\r\n                <Fragment> \r\n                    <Link to='/profiles' className='btn btn-primary'>\r\n                        Back to profiles\r\n                    </Link>\r\n                   {\r\n                       auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id \r\n                       && (\r\n                       <Link to='/edit-profile' className='btn btn-dark'>\r\n                           Edit Profile\r\n                       </Link>\r\n                       )\r\n                   }\r\n                   <ProfileTop profile={profile} />\r\n                </Fragment>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getProfileById  } )(Profile);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { addLikes, removeLikes, deletePost }  from '../../action/post';\r\n\r\n\r\nconst PostItem = ({ \r\n    auth,\r\n    post: {_id, text, name, avatar, user, likes, comments, date },\r\n    addLikes,\r\n    removeLikes,\r\n    deletePost,\r\n}) => {\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to=\"/profile\">\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD' date={date} />\r\n            </p>\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={() => addLikes(_id)}>\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n\r\n              {likes.length > 0 && <span>{likes.length}</span>}\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={() => removeLikes(_id)}>\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n\r\n              {likes.length > 0 && <span>{likes.length}</span>}\r\n            </button>\r\n            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{' '}\r\n              {comments.length > 0 && \r\n              <span className='comment-count'>{comments.length}</span> }\r\n            </Link>\r\n            {\r\n                !auth.loading && user === auth.user._id &&  (\r\n                    <button      \r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => deletePost(_id)}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                )\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    addLikes: PropTypes.func.isRequired,\r\n    removeLikes: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLikes, removeLikes, deletePost })(PostItem);","import axios from 'axios';\r\nimport { \r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKE,\r\n    DELETE_POST,\r\n    ADD_POST\r\n } from '../action/type';\r\n import { setAlert } from './alert';\r\n\r\n\r\n export const getPosts = () => async dispatch => {\r\n     try {\r\n         const res = await axios.get('/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        });\r\n\r\n     } catch (error) {\r\n         dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: error.response.data.statusText, status: error.response.data.status }\r\n         });\r\n     }\r\n }\r\n// addLikes\r\n export const addLikes = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n       dispatch({\r\n           type: UPDATE_LIKE,\r\n           payload: {id, likes: res.data}\r\n       });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n           type: POST_ERROR,\r\n           payload: { msg: error.response.data.statusText, status: error.response.data.status }\r\n        });\r\n    }\r\n}\r\n// removeLikes\r\nexport const removeLikes = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n       dispatch({\r\n           type: UPDATE_LIKE,\r\n           payload: {id, likes: res.data}\r\n       });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n           type: POST_ERROR,\r\n           payload: { msg: error.response.data.statusText, status: error.response.data.status }\r\n        });\r\n    }\r\n}\r\n\r\n//Delete Post\r\nexport const deletePost = (id) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        })\r\n        dispatch(setAlert('Post Deleted', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: error.response.data.statusText, status: error.response.data.status }\r\n         });\r\n    }\r\n}\r\n\r\n//Add Post\r\nexport const addPost = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        }\r\n\r\n        const body = {\r\n            \"text\" : formData\r\n        }\r\n\r\n        const res = await axios.post(`/api/posts`, body, config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Post Updated', 'success'));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: error.response.data.statusText, status: error.response.data.status }\r\n         });\r\n    }\r\n}","import React, { useEffect, Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../action/post';\r\nimport { Spinner } from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport { addPost } from '../../action/post';\r\n\r\nconst Posts = ({ \r\n    getPosts, \r\n    post: { loading, posts },\r\n    addPost\r\n}) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts])\r\n\r\n    const [text, setText] = useState(' ');\r\n\r\n\r\n    return loading ? (<Spinner />\r\n    ) : ( \r\n    <Fragment>\r\n        <h1 className=\"large text-primary\">Posts</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\">Welcome to the community</i>\r\n        </p>\r\n        <div className=\"post-form\">\r\n            <div className=\"bg-primary p\">\r\n            <h3>Say Something...</h3>\r\n            </div>\r\n            <form className=\"form my-1\" onSubmit={(e) => {\r\n                e.preventDefault();\r\n                addPost( text );\r\n                setText('');\r\n                }\r\n            }>\r\n            <textarea\r\n                name='text'\r\n                cols=\"30\"\r\n                rows=\"5\"\r\n                placeholder=\"Create a post\"\r\n                value={ text }\r\n                onChange={(e) => setText(e.target.value)}\r\n            ></textarea>\r\n            <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n            </form>\r\n      </div>\r\n        {/* postForm */}\r\n        <div className=\"posts\">\r\n            {posts.map((post, idx) => (\r\n                <PostItem key={idx} post={post} />\r\n            ) )}\r\n        </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    addPost: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts, addPost })(Posts);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nconst Alert = ({ alerts }) => \r\nalerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    // whenever use map() then the children need a key [its a list output => required key]\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        { alert.msg }\r\n    </div>\r\n))\r\n\r\nAlert.propTypes = {\r\n    //identify alerts as Array only.\r\n    alerts: PropTypes.array.isRequired, \r\n}\r\n\r\n//function name for getting state from redux\r\n\r\n//Take data from redux store \r\n//______________________________________________\r\nconst mapStateToProps = state => ({\r\n    //at root store of reduce root = state;\r\n    //if wanna take something else: state.[name] in rootReducer\r\n    alerts: state.alert //the name of variable is optional\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n//______________________________________________","import {SET_ALERT, REMOVE_ALERT} from '../action/type';\r\n\r\n\r\nconst INITIAL_STATE = [] ;\r\n\r\n// eslint-disable-next-line\r\nexport default function (state = INITIAL_STATE, action){\r\n    const {type, payload} = action\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload); //return all alert except for matching payload\r\n            //return new array where the matching alert have been deleted => DELETED.\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    TEST_ROUTE,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOG_OUT,\r\n    ACCOUNT_DELETED\r\n}  from '../action/type';\r\n\r\nconst INITIAL_STATE = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default function (state = INITIAL_STATE, action ) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            } \r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            //set new token into localStorage;\r\n            localStorage.setItem('token', payload.token);\r\n            //return \r\n            return {\r\n                ...state, \r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOG_OUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token'); // remove token out of local storage\r\n            return {\r\n                ...state, \r\n                ...payload,\r\n                token:null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        case TEST_ROUTE:\r\n            return state;\r\n        default: \r\n        return state;\r\n    }\r\n}","import {\r\n    GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, ADD_EXPERIENCE_FAIL, ADD_EXPERIENCE_SUCCESS, ADD_EDUCATION_SUCCESS,\r\n    DELETE_EXP,\r\n    DELETE_EDU,\r\n    GET_PROFILES,\r\n    GET_PROFILE_BY_ID,\r\n    GET_GITHUB_REPOS,\r\n}\r\nfrom '../action/type';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n// eslint-disable-next-line \r\nexport default function (state = INITIAL_STATE, action ) {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case GET_PROFILE:\r\n        case ADD_EXPERIENCE_SUCCESS:\r\n        case ADD_EDUCATION_SUCCESS:\r\n        case DELETE_EXP:\r\n        case DELETE_EDU:\r\n        case GET_PROFILE_BY_ID:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n            case GET_PROFILES:\r\n                return {\r\n                    ...state,\r\n                    profiles: payload,\r\n                    loading: false\r\n                }\r\n            case GET_GITHUB_REPOS:\r\n                return {\r\n                    ...state,\r\n                    repos: payload,\r\n                    loading: false\r\n                }\r\n            case PROFILE_ERROR:\r\n            case ADD_EXPERIENCE_FAIL:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n            case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                loading: false,\r\n                repos: []\r\n            }\r\n            default: \r\n            return state; \r\n    }\r\n}","import { \r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKE,\r\n    DELETE_POST,\r\n    ADD_POST\r\n} from '../action/type'\r\n\r\nconst INITIAL_STATE = {\r\n    post: null,\r\n    posts: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n// eslint-disable-next-line\r\nexport default function (state = INITIAL_STATE, action) {\r\n\r\nconst {type, payload} = action;\r\n\r\nswitch(type){\r\n    case GET_POSTS:\r\n        return {\r\n            ...state,\r\n            posts: payload,\r\n            loading: false\r\n        }\r\n    case POST_ERROR:\r\n        return {\r\n            ...state,\r\n            error: payload,\r\n            loading: false\r\n        }\r\n    case UPDATE_LIKE:\r\n        return {\r\n            ...state,\r\n            posts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes} : post),\r\n            loading: false\r\n        }\r\n    case DELETE_POST:\r\n        return {\r\n            ...state,\r\n            posts: state.posts.filter(post => post._id !== payload),\r\n            loading: false,\r\n            }\r\n    case ADD_POST:\r\n        return {\r\n            ...state,\r\n            posts: [...state.posts, payload],\r\n            loading: false,\r\n      }\r\n    default: \r\n        return state\r\n}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n//compose dev tool used with applymiddleware and redux thunk.\r\nconst store = createStore(rootReducer,\r\ninitialState,\r\ncomposeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, {Fragment, useEffect} from 'react';\nimport './App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport CreateProfile from './components/profile-form/createProfile';\nimport EditProfile from './components/profile-form/EditProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\n//Layout\nimport Alert from './components/layout/Alert';\n//Layout\n\n\n//redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n//redux\n\n//Load User function\nimport { loadUser } from './action/auth';\n//\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nconst App = () => {\n  \n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return(\n    <Provider store={store}>\n      <Router>\n          <Fragment>\n            <Navbar />\n            <Route exact path='/' component={ Landing }/>\n            <section className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path='/register' component={ Register } />\n                <Route exact path='/login' component={ Login } />\n                <Route exact path='/profiles' component={ Profiles } />\n                <Route exact path='/profile/:id' component={ Profile } />\n                <PrivateRoute exact path='/dashboard' component={ Dashboard } />\n                <PrivateRoute exact path='/create-profile' component={ CreateProfile } />\n                <PrivateRoute exact path='/edit-profile' component={ EditProfile } />\n                <PrivateRoute exact path='/add-experience' component={ AddExperience } />\n                <PrivateRoute exact path='/add-education' component={ AddEducation } />\n                <PrivateRoute exact path='/posts' component={ Posts } />\n              </Switch>\n            </section>\n          </Fragment>\n      </Router>\n    </Provider> \n)}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}